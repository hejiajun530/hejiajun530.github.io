// flex布局
$flex-jc: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around
);
$flex-ai: (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch
);
.d-flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.flex-1 {
  flex: 1;
}
@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value !important;
  }
}
@each $key, $value in $flex-ai {
  .ai-#{$key} {
    align-items: $value !important;
  }
}
// 文字溢出隐藏
.text-ellipsis {
  display: inline-block;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
// 文字对齐方式
$algin-text: (
  left: left,
  center: center,
  right: right
);
@each $key, $value in $algin-text {
  .text-#{$key} {
    text-align: $value !important;
  }
}
// 绝对定位 水平垂直居中
.positionCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
// 绝对定位 左上
.positionTopLeft {
  position: absolute;
  top: 0;
  left: 0;
}
// 绝对定位 右上
.positionTopRight {
  position: absolute;
  top: 0;
  right: 0;
}
// 绝对定位 左下
.positionBottomLeft {
  position: absolute;
  bottom: 0;
  left: 0;
}
// 绝对定位 右下
.positionBottomRight {
  position: absolute;
  bottom: 0;
  right: 0;
}
// 遮挡层
.mask {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.6);
}
// 手指鼠标
.pointSB {
  cursor: pointer;
}
// 居中 1000px 中心区域宽度限制
.w {
  width: 62.5rem;
  margin: 0 auto;
}
// Me 页面标题
.me-title {
  border-left: 4px solid orangered;
  padding: 5px 0 5px 20px;
}
// Me 页面表单
.me-input {
  width: 100%;
  height: 35px;
  border: 1px solid #dddddd;
  padding: 0 0 0 0.9375rem;
  border-radius: 10px;
}
// Me 页面按钮
.me-button {
  background: orangered;
  border-radius: 10px;
  padding: 10px 25px;
  color: #ffffff;
}
// Me 页面
.info-edit {
  .info-edit-item {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-wrap: wrap;
    padding: 0.625rem 0;
    .info-edit-item-label {
      text-align: left;
      width: 7.5rem;
      font-weight: 600;
    }
    .info-edit-item-content {
      min-width: 18.75rem;
    }
  }
}

$themes: (
    light: (
        //字体
        font_color1: #414141,
        font_color2: white,
        //背景
        background_color1: #fffbf0,
        background_color2: #f0f2f5,
        background_color3: red,
        background_color4: #2674e7,
        //边框
        border_color1: #3d414a,
    ),
    dark: (
        //字体
        font_color1: #a7a7a7,
        font_color2: white,
        //背景
        background_color1: #1b2531,
        background_color2: #283142,
        background_color3: #1e6ceb,
        background_color4: #323e4e,
        //边框
        border_color1: #3d414a,
    )
);

//遍历主题map
@mixin themeify {
  @each $theme-name, $theme-map in $themes {
      //!global 把局部变量强升为全局变量
      $theme-map: $theme-map !global;
      //判断html的data-theme的属性值  #{}是sass的插值表达式
      //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
      [data-theme="#{$theme-name}"] & {
          @content;
      }
  }
}
//声明一个根据Key获取颜色的function
@function themed($key) {
  @return map-get($theme-map, $key);
}
//获取背景颜色
@mixin background_color($color) {
  @include themeify {
      background-color: themed($color)!important;
  }
}
//获取字体颜色
@mixin font_color($color) {
  @include themeify {
      color: themed($color)!important;
  }
}
//获取边框颜色
@mixin border_color($color) {
  @include themeify {
      border-color: themed($color)!important;
  }
}